// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int           @id @default(autoincrement())
  email                String        @unique
  username             String
  hashed_password      String
  daily_strick         Int           @default(0)
  total_time           Int           @default(0)
  total_sessions       Int           @default(0)
  progress             Float         @default(0)
  limit                Int           @default(20)
  subscriber           Boolean       @default(false)
  roles                Role[]
  hashed_refresh_token String?
  history              HistoryItem[]
}

model Role {
  id          Int    @id @default(autoincrement())
  value       String @unique
  description String
  users       User[]
}

model Practice {
  id          Int          @id @default(autoincrement())
  title       String
  meditations Meditation[]
  colors      String[]
}

model Meditation {
  id         Int           @id @default(autoincrement())
  title      String
  duration   Int
  audio      String
  image      String
  forSubs    Boolean       @default(true)
  practice   Practice      @relation(fields: [practiceId], references: [id])
  practiceId Int
  histories  HistoryItem[]
}

model Affirmation {
  id    Int    @id @default(autoincrement())
  text  String @unique
  image String
}

model HistoryItem {
  id          Int          @id @default(autoincrement())
  date        Int
  userId      Int
  meditations Meditation[]
  user        User         @relation(fields: [userId], references: [id])

  @@unique([date, userId])
}
